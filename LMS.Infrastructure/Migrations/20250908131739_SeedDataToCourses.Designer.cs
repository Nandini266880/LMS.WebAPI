// <auto-generated />
using System;
using LMS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS.Infrastructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250908131739_SeedDataToCourses")]
    partial class SeedDataToCourses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMS.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Description = "Learn the basics of C# programming language and object-oriented concepts.",
                            Price = 49.990000000000002,
                            ThumbnailUrl = "https://example.com/thumb1.jpg",
                            Title = "Introduction to C#"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 2,
                            Description = "Deep dive into JavaScript, including ES6+, asynchronous programming, and modern frameworks.",
                            Price = 59.990000000000002,
                            ThumbnailUrl = "https://example.com/thumb2.jpg",
                            Title = "Advanced JavaScript"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 3,
                            Description = "Use Python to analyze data, visualize insights, and apply machine learning models.",
                            Price = 69.989999999999995,
                            ThumbnailUrl = "https://example.com/thumb3.jpg",
                            Title = "Python for Data Science"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Description = "Build dynamic web applications using React, Redux, and modern frontend tooling.",
                            Price = 79.989999999999995,
                            ThumbnailUrl = "https://example.com/thumb4.jpg",
                            Title = "Web Development with React"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 2,
                            Description = "Learn how to query, manipulate, and manage data using SQL databases.",
                            Price = 39.990000000000002,
                            ThumbnailUrl = "https://example.com/thumb5.jpg",
                            Title = "SQL for Beginners"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Description = "Create robust web applications using ASP.NET Core MVC framework.",
                            Price = 59.990000000000002,
                            ThumbnailUrl = "https://example.com/thumb6.jpg",
                            Title = "ASP.NET Core MVC"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 3,
                            Description = "Understand fundamental concepts of machine learning and build predictive models.",
                            Price = 89.989999999999995,
                            ThumbnailUrl = "https://example.com/thumb7.jpg",
                            Title = "Machine Learning Basics"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 2,
                            Description = "Master HTML and CSS to design beautiful and responsive web pages.",
                            Price = 29.989999999999998,
                            ThumbnailUrl = "https://example.com/thumb8.jpg",
                            Title = "Frontend with HTML & CSS"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 3,
                            Description = "Learn Java programming, object-oriented principles, and application development.",
                            Price = 49.990000000000002,
                            ThumbnailUrl = "https://example.com/thumb9.jpg",
                            Title = "Java Fundamentals"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 1,
                            Description = "Build scalable backend applications using Node.js and Express framework.",
                            Price = 59.990000000000002,
                            ThumbnailUrl = "https://example.com/thumb10.jpg",
                            Title = "Node.js & Express"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 3,
                            Description = "Create 2D and 3D games using Unity engine and C# scripting.",
                            Price = 79.989999999999995,
                            ThumbnailUrl = "https://example.com/thumb30.jpg",
                            Title = "Game Development with Unity"
                        });
                });

            modelBuilder.Entity("LMS.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("LMS.Domain.Entities.Course", b =>
                {
                    b.HasOne("LMS.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
